// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"f-dorm/app/demo/internal/biz"
	"f-dorm/app/demo/internal/data"
	"f-dorm/app/demo/internal/server"
	"f-dorm/app/demo/internal/service"
	"f-dorm/core/app"
	"github.com/go-kratos/kratos/v2"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp() (*kratos.App, func(), error) {
	appApp, err := app.NewApp()
	if err != nil {
		return nil, nil, err
	}
	logger := app.NewLogger(appApp)
	discovery := app.NewDiscovery()
	dataData, cleanup, err := data.NewData(logger, discovery)
	if err != nil {
		return nil, nil, err
	}
	greeterRepo := data.NewGreeterRepo(dataData)
	greeterUsecase := biz.NewGreeterUsecase(greeterRepo)
	demoService := service.NewDemoService(greeterUsecase)
	httpServer := server.NewHTTPServer(demoService)
	grpcServer := server.NewGRPCServer(demoService)
	registrar := app.NewRegistrar()
	kratosApp := newApp(appApp, logger, httpServer, grpcServer, registrar)
	return kratosApp, func() {
		cleanup()
	}, nil
}
